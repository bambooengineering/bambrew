#!/usr/bin/env bash
set -eu

if [ -z "$USER" ]; then
  echo "Aborting! No USER environment variable set"
  exit 3;
fi

if [ "$(id -u)" = 0 ]; then
  echo "Aborting! Must not be run as root"
  exit 4
fi

echo "Requesting sudo access to install packages if needed"
sudo date

if ! [ -x "$(command -v curl)" ]; then
  echo "Installing curl..."
  sudo apt-get install -y curl
fi

if [ ! -f "$HOME/.ssh/id_rsa.pub" ]; then
  echo "Ensure you have your GitHub SSH key at ~/.ssh/id_rsa.pub"
  exit 1
fi

echo "Checking for brew installation"
if ! [ -x "$(command -v brew)" ]; then
  # https://docs.brew.sh/Homebrew-on-Linux
  echo "Installing brew..."
  sudo apt-get install -y build-essential procps file git
  /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
  # Allow brew to be used in this script
  eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
fi

echo "Checking for rbenv installation"
if ! [ -x "$(command -v rbenv)" ]; then
  echo "Installing rbenv"
  brew install rbenv
fi

if [ ! -f "$HOME/.rbenv/shims/ruby" ]; then
  echo "No suitable Ruby found. Installing ruby via rbenv..."
  sudo apt-get install -y libz-dev libssl-dev libreadline-dev libyaml-dev libxml2-dev libxslt-dev
  rbenv install 3.1.3
fi

if [ ! -f "$HOME/.config/hub" ]; then
  echo "Ensure you have set up your GitHub access token in ~/.config/hub"
  exit 1
fi

GITHUB_TOKEN=$(ruby -e "require 'yaml'; puts YAML.load_file(Dir.home + '/.config/hub')['github.com'][0]['oauth_token']")

run_curl() {
  ORGANISATION="bambooengineering"
  REPO="umbrella"
  FILE_PATH="bambrew/lib/bambrew/bamstrap.rb"
  URL="https://api.github.com/repos/$ORGANISATION/$REPO/contents/$FILE_PATH"

  curl "$@" --header "Authorization: token $GITHUB_TOKEN" \
       --header "Accept: application/vnd.github.v3.raw" \
       --silent \
       --show-error \
       --location "$URL"
}

code=$(run_curl -o /dev/null -w "%{http_code}")
if [ "$code" != "200" ]; then
  echo "Unexpected response code $code"
  exit 7
fi

$HOME/.rbenv/shims/ruby -e "$(run_curl)"
